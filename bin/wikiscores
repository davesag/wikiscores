#!/usr/bin/env node

const program = require('commander')
const mkdirp = require('mkdirp')
const path = require('path')
const plural = require('pluralize')

const { version } = require('../package.json')

const run = require('../src/run')
const writeCSV = require('../src/utils/writeCSV')
const createFolders = require('../src/utils/createFolders')
const normaliseFileName = require('../src/utils/normaliseFileName')
const { reset, write } = require('../src/utils/cache')
const { MAX_THROTTLE_RATE, MAX_CONCURRENCY } = require('../src/constants')

program
  .version(version, '-v, --version')
  .usage('[options]')
  .option('-o, --output <outputPath>', 'The output path. Defaults to output.csv')
  .option('-r --rate <rate>', 'The throttle rate. Defaults to a max of 99 requests per second.')
  .option('-c --concurrent <concurrent>', 'The max number of simultanious requests. Defaults to 10')
  .parse(process.argv)

const { output = 'output.csv', rate, concurrent } = program
const outputPath = path.join(process.cwd(), normaliseFileName(output))
const throttleRate = rate ? parseInt(rate) : MAX_THROTTLE_RATE
const concurrency = concurrent ? parseInt(concurrent) : MAX_CONCURRENCY

if (throttleRate > MAX_THROTTLE_RATE)
  throw new Error(`Throttle Rate must be less than ${MAX_THROTTLE_RATE}`)

if (concurrency > MAX_CONCURRENCY)
  throw new Error(`Concurrency must be less than ${MAX_CONCURRENCY}`)

console.log('will write data to', outputPath)
console.log('throttled to', plural('request', throttleRate, true), 'per second')
console.log('concurrency', plural('request', concurrency, true), 'at a time')

console.log('ctrl-c to abort')

reset()
write('throttleRate', throttleRate)
write('concurrency', concurrency)

createFolders(outputPath)
.then(run)
.then(writeCSV(outputPath))
.catch(err => {
  console.error('Could not complete due to error:', err)
})
